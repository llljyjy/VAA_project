[
  {
    "objectID": "prototype/data_preparation/data_preparation_and_choropleth.html",
    "href": "prototype/data_preparation/data_preparation_and_choropleth.html",
    "title": "Data Preparation & ChoroPleth",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               ggdist, ggridges,\n               colorspace,ggstatsplot, \n               tidyverse) \n\nimport big mac data\n\nbig_mac &lt;- read_csv(\"data/big_mac.csv\")\n\n\nhead(big_mac)\n\n# A tibble: 6 × 9\n  date  iso_a3 currency_code name  local_price dollar_ex dollar_price GDP_bigmac\n  &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 1/4/… ARG    ARS           Arge…        2.5      1             2.5       7803.\n2 1/4/… AUS    AUD           Aust…        2.59     1.68          1.54     29166.\n3 1/4/… BRA    BRL           Braz…        2.95     1.79          1.65      4823.\n4 1/4/… GBR    GBP           Brit…        1.9      0.633         3.00     20977.\n5 1/4/… CAN    CAD           Cana…        2.85     1.47          1.94     26087.\n6 1/4/… CHL    CLP           Chile     1260      514             2.45      4510.\n# ℹ 1 more variable: adj_price &lt;dbl&gt;"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_choropleth.html#loading-the-required-r-packages.",
    "href": "prototype/data_preparation/data_preparation_and_choropleth.html#loading-the-required-r-packages.",
    "title": "Data Preparation & ChoroPleth",
    "section": "3.1 Loading the required R packages.",
    "text": "3.1 Loading the required R packages.\nThe function World is a spatial object from the sf package. It is a special column that contains geometry for each row; called 8polygons*.\n\npacman::p_load(sf, tmap, tidyverse, tmaptools)\n\nCalling out the object World.\n\ndata(\"World\")\n\nSubsequently, removing the columns selected below which are non-consequential to the project’s scope.\n\nwmpb_World &lt;- World %&gt;% \n  select(-HPI, -inequality, -footprint, -life_exp, -well_being, -gdp_cap_est)\nwmpb_World\n\nSimple feature collection with 177 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   iso_a3                   name           sovereignt               continent\n1     AFG            Afghanistan          Afghanistan                    Asia\n2     AGO                 Angola               Angola                  Africa\n3     ALB                Albania              Albania                  Europe\n4     ARE   United Arab Emirates United Arab Emirates                    Asia\n5     ARG              Argentina            Argentina           South America\n6     ARM                Armenia              Armenia                    Asia\n7     ATA             Antarctica           Antarctica              Antarctica\n8     ATF Fr. S. Antarctic Lands               France Seven seas (open ocean)\n9     AUS              Australia            Australia                 Oceania\n10    AUT                Austria              Austria                  Europe\n                  area  pop_est pop_est_dens                    economy\n1    652860.000 [km^2] 28400000 4.350090e+01  7. Least developed region\n2   1246700.000 [km^2] 12799293 1.026654e+01  7. Least developed region\n3     27400.000 [km^2]  3639453 1.328268e+02       6. Developing region\n4     71252.172 [km^2]  4798491 6.734519e+01       6. Developing region\n5   2736690.000 [km^2] 40913584 1.495003e+01    5. Emerging region: G20\n6     28470.000 [km^2]  2967004 1.042151e+02       6. Developing region\n7  12259213.973 [km^2]     3802 3.101341e-04       6. Developing region\n8      7257.455 [km^2]      140 1.929051e-02       6. Developing region\n9   7682300.000 [km^2] 21262641 2.767744e+00 2. Developed region: nonG7\n10    82523.000 [km^2]  8210281 9.949082e+01 2. Developed region: nonG7\n                income_grp                       geometry\n1            5. Low income MULTIPOLYGON (((61.21082 35...\n2   3. Upper middle income MULTIPOLYGON (((16.32653 -5...\n3   4. Lower middle income MULTIPOLYGON (((20.59025 41...\n4  2. High income: nonOECD MULTIPOLYGON (((51.57952 24...\n5   3. Upper middle income MULTIPOLYGON (((-65.5 -55.2...\n6   4. Lower middle income MULTIPOLYGON (((43.58275 41...\n7  2. High income: nonOECD MULTIPOLYGON (((-59.57209 -...\n8  2. High income: nonOECD MULTIPOLYGON (((68.935 -48....\n9     1. High income: OECD MULTIPOLYGON (((145.398 -40...\n10    1. High income: OECD MULTIPOLYGON (((16.97967 48..."
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_choropleth.html#importing-geo-relational-attributes-into-the-shp-file",
    "href": "prototype/data_preparation/data_preparation_and_choropleth.html#importing-geo-relational-attributes-into-the-shp-file",
    "title": "Data Preparation & ChoroPleth",
    "section": "3.2 Importing Geo-Relational Attributes into the shp file",
    "text": "3.2 Importing Geo-Relational Attributes into the shp file\nNext, we will import cleaned_big_mac_data file into RStudio and save the file into an R dataframe called Big_mac index.\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\nBMIdata &lt;- read_csv(\"data/countries_with_complete_data.csv\")\n\n\nwmpb_World_BMI &lt;- wmpb_World %&gt;% left_join(BMIdata,\n                          by = c(\"name\" = \"country\"))\n\nMerged_data_cleaned will exclude countries with all NA values for the specified columns and filtering the selected year needed.\n\nlibrary(dplyr)\n\nwmpb_World_BMI_2020 &lt;- wmpb_World_BMI %&gt;%\n  filter(year == 2020) %&gt;% \n  group_by(name) %&gt;%\n  filter(\n    any(!is.na(currency_code)) & \n    any(!is.na(bmi_localprice)) & \n    any(!is.na(bmi_usdprice)) & \n    any(!is.na(export_usd)) & \n    any(!is.na(import_usd)) & \n    any(!is.na(GDP)) & \n    any(!is.na(gdp_per_capita)) & \n    any(!is.na(gdp_per_employed)) & \n    any(!is.na(inflation)) & \n    any(!is.na(year))\n  ) %&gt;%\n  ungroup()\n\n\nwrite_rds(wmpb_World_BMI_2020, \"data/wmpb_BMI_cleaned_2020.rds\")\n\n\ntmap_mode(\"view\")\n\ntm &lt;- tm_shape(wmpb_World_BMI_2020) +\n  tm_polygons(\"inflation\", id = \"name\", popup.vars = c(\"Big Mac Index\" = \"bmi_usdprice\", \n                                                       \"Inflation\" = \"inflation\", \n                                                       \"Population Density\" = \"pop_est_dens\", \n                                                       \"GDP per Employed\" = \"gdp_per_employed\",\n                                                       \"Import(USD)\" = \"import_usd\",\n                                                       \"Export(USD)\" = \"export_usd\"),\n            popup.format = list(pop_est_dens = list(digits = 1), gdp_per_employed = list(digits = 0), inflation = list(digits = 1)\n  )) +\n  tm_layout()\n\ntm\n\n\n\n\n#qtm(wmpb_World_BMI_2020, \n   #fill = \"usd_price\")\n\n\nmap_imports &lt;- tm_shape(wmpb_World_BMI_2020) +\n  tm_polygons(\"import_usd\", id = \"name\") + \n  tm_layout(frame = FALSE)\n\nmap_exports &lt;- tm_shape(wmpb_World_BMI_2020) +\n  tm_polygons(\"export_usd\", id = \"name\") +\n  tm_layout(frame = FALSE)\n\n# Arrange the maps using tm_arrange\ntmap_arrange(map_imports, map_exports, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(shiny)\nlibrary(leaflet)\n\n# Assuming 'wmpb_World_BMI_2020' is already loaded and contains 'iso_a3' for country codes,\n# 'import_usd', and 'export_usd' for import and export values.\n\nui &lt;- fluidPage(\n  fluidRow(\n    column(6, leafletOutput(\"wmpb_World_BMI_2020\")),\n    column(2, leafletOutput(\"map_imports\"), style = \"height: 300px;\", offset = 1),\n    column(2, leafletOutput(\"map_exports\"), style = \"height: 300px;\", offest = 1))\n  )\n\n\nserver &lt;- function(input, output, session) {\n\n  # Reactive value to store the selected country code\n  selected_country_code &lt;- reactiveVal()\n  \n  output$wmpb_World_BMI_2020 &lt;- renderLeaflet({\n    leaflet(wmpb_World_BMI_2020) %&gt;%\n      addTiles() %&gt;%\n      addPolygons(\n        fillColor = ~colorQuantile(palette = \"Greens\", domain = wmpb_World_BMI_2020$inflation)(inflation),\n        color = \"#BDBDC3\",\n        fillOpacity = 0.7,\n        weight = 1,\n        popup = ~paste(name, \"&lt;br&gt;Inflation: \", inflation),\n        layerId = ~iso_a3\n      )\n  })\n\n  output$map_imports &lt;- renderLeaflet({\n    leaflet(wmpb_World_BMI_2020) %&gt;%\n      addTiles() %&gt;%\n      addPolygons(\n        fillColor = ~colorQuantile(palette = \"Blues\", domain = wmpb_World_BMI_2020$import_usd)(import_usd),\n        color = \"#BDBDC3\",\n        fillOpacity = 0.7,\n        weight = 1,\n        popup = ~paste(name, \"&lt;br&gt;Import (USD): \", import_usd),\n        layerId = ~iso_a3\n      )\n  })\n\n  output$map_exports &lt;- renderLeaflet({\n    leaflet(wmpb_World_BMI_2020) %&gt;%\n      addTiles() %&gt;%\n      addPolygons(\n        fillColor = ~colorQuantile(palette = \"Reds\", domain = wmpb_World_BMI_2020$export_usd)(export_usd),\n        color = \"#BDBDC3\",\n        fillOpacity = 0.7,\n        weight = 1,\n        popup = ~paste(name, \"&lt;br&gt;Export (USD): \", export_usd),\n        layerId = ~iso_a3\n      )\n  })\n\n  observe({\n    click &lt;- input$wmpb_World_BMI_2020_click\n    if (!is.null(click)) {\n      selected_country_code(click$id)\n    }\n  })\n  \n  observe({\n    click &lt;- input$map_imports_click\n    if (!is.null(click)) {\n      selected_country_code(click$id)\n    }\n  })\n\n  observe({\n    click &lt;- input$map_exports_click\n    if (!is.null(click)) {\n      selected_country_code(click$id)\n    }\n  })\n\n  observe({\n    code &lt;- selected_country_code()\n    if (!is.null(code)) {\n      leafletProxy(\"map_imports\") %&gt;%\n        clearShapes() %&gt;%\n        addPolygons(\n          fillColor = ~colorQuantile(palette = \"Blues\", domain = wmpb_World_BMI_2020$import_usd)(import_usd),\n          color = ~ifelse(iso_a3 == code, \"yellow\", \"#BDBDC3\"),\n          fillOpacity = 0.7,\n          weight = 1,\n          popup = ~paste(name, \"&lt;br&gt;Import (USD): \", import_usd),\n          layerId = ~iso_a3\n        )\n      \n      leafletProxy(\"map_exports\") %&gt;%\n        clearShapes() %&gt;%\n        addPolygons(\n          fillColor = ~colorQuantile(palette = \"Reds\", domain = wmpb_World_BMI_2020$export_usd)(export_usd),\n          color = ~ifelse(iso_a3 == code, \"yellow\", \"#BDBDC3\"),\n          fillOpacity = 0.7,\n          weight = 1,\n          popup = ~paste(name, \"&lt;br&gt;Export (USD): \", export_usd),\n          layerId = ~iso_a3\n        )\n    }\n  })\n}\n\nshinyApp(ui, server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "VAA_project",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "proposal/proposal.html#the-big-mac-index",
    "href": "proposal/proposal.html#the-big-mac-index",
    "title": "Project Proposal",
    "section": "THE BIG MAC INDEX 🍔",
    "text": "THE BIG MAC INDEX 🍔\nThe Big Mac Index (BMI) was invented by The Economist in 1986 as a light-hearted guide to whether currencies are at their “correct” level. It is based on the theory of purchasing-power parity (PPP), with the notion that in the long run, exchange rates should move towards the rate that would equalise the prices of an identical basket of goods and services (in this case, a burger) in any two countries. The BMI has become a global standard, included in several economic textbooks and the subject of dozens of academic studies.\nAccording to Visual Capitalist, “given that McDonald’s is one of the biggest companies in the world and the Big Mac is widely available globally, it means that the famous burger can be used as a basic goods comparison between most countries”. Thus, the BMI can be used to show inflation in burger prices across countries over time when compared in the same currency.\nAs seen in the visualisation below, there is constant movement in the prices of the Big Mac amongst countries. In some years, Switzerland is the most expensive while Venezuela has taken the top spot due to its hyperinflation problems. Thus, we would like to visually examine the phenomenon of inflation co-movement by looking at the similarities in inflation prices between countries through time, isolate groups with similar characteristics, and determine if the BMI is a suitable proxy to inflation prices."
  },
  {
    "objectID": "proposal/proposal.html#problem-statement",
    "href": "proposal/proposal.html#problem-statement",
    "title": "Project Proposal",
    "section": "PROBLEM STATEMENT 💫",
    "text": "PROBLEM STATEMENT 💫\nThere is a significant gap in making complex economic data accessible to the general public and providing advanced analysis tools for professionals. Existing visualization tools, including government dashboards, often fail to cater effectively to both audiences. To address this, we propose an R Shiny-based interactive tool that leverages publicly available data, the Big Mac Index to simplify the understanding of global financial trends for laypersons while offering in-depth data exploration and modelling capabilities for analysts."
  },
  {
    "objectID": "proposal/proposal.html#literature-review",
    "href": "proposal/proposal.html#literature-review",
    "title": "Project Proposal",
    "section": "LITERATURE REVIEW 📖",
    "text": "LITERATURE REVIEW 📖\nAccording to Tiwari, Abakah, Gil-Alana, & Abakah (2021), co-movement of inflation is mainly fuelled by the fact that “real economic activity is also correlated across countries… As a result, domestic inflation responds to correlated changes in the domestic demand, hence, co-movement in the business cycles could lead to commonality in inflation”. While inflation is commonly measured by Consumer Price Index (CPI), there is not much research conducted on conducting a visual analysis on CPI and inflation. However, our data of BMI share similar characteristics to GDP, other global indices such as the Good Country Index, and socioeconomic indicators from sources such as the World Bank – all these data are spatial-temporal multidimensional data. As pointed out by Priselac (2021), the three main issues of spatial-temporal data is\n1) “the continuous and discrete changes in spatial and non–spatial properties of spatial time object”,\n2) “the influence of collocated neighboring spatial time objects on each other”, and\n3) “space is two-dimensional and can move in an unlimited direction, while time can only move forward, i.e., it is one–dimensional”.\nSome proposed methods are as follow:\n\n\n\n\n\n\n\n\nType of data\nVisual Analytics Methods\nAuthors\n\n\n\n\nGood Country Index,\nSocial Progress Index,\nGlobal Innovation Index,\nGlobal Creativity Index,\nSocial Progress Index,\nHuman Development index etc.\n\nSpatial autocorrelation (Cluster and outlier analysis)\nHot spot analysis\nGrouping analysis\n\nTan & Dramowicz (2016)\n\n\nGDP data\n\nSpatial clustering\nTemporal visualization (using streamlines)\nInteractivity\n\nZhou, et al. (2017)\n\n\nTraffic data\n\nCluster analysis\nTemporal Fingerprinting Through Circular Heat Maps\nSpatio-temporal Comparison Through Circular Heat Map Subtraction\nTemporal Behaviour Characterisation Through Label Maps\n\nDhont, Tsiporkova, Tourwé, & González-Deleito (2020)\n\n\nGDP, inflation rate, employment rate, Gini index etc.\n\nCluster Analysis\nPrediction modelling using Regression and Classification\n\nPriselac (2021)\n\n\nWorld Bank Open data\n\nCluster analysis\nK-means and PCA\nAgglomerative Clustering with ‘cosine’ metric and T-SNE\nDynamic Time Warping (DTW)\nDTW Barycenter Averaging with K-Means and T-SNE\nDTW Barycenter Averaging with KMeans and LSTMAutoencoder\n\nSoćko (2023)\n\n\n\nWe also acknowledge the impact of imports and exports on inflation co-movement – according to Ho, Sarte, & Schwartzman (2023), “even without global shocks, the trade network alone is sufficient to generate substantial comovement in output growth and inflation”. Such data that traces the economic exchanges between countries are often analysed with network analysis.\nSome proposed methods are as follow:\n\n\n\n\n\n\n\n\nType of data\nVisual Analytics Methods\nAuthors\n\n\n\n\nExport data\n\nNetwork analysis with geo layout algorithm\nModularity/Community analysis\nTopological analysis e.g. betweenness centrality analysis\n\nGönçer-Demiral & İnce-Yenilmez (2022)\n\n\nGlobal trade network data (import and export)\n\nNetwork analysis with aggregation and network backbone extraction method\nEnrich network information on each country with embedded geographical, cultural and political features\nERGM and STERGM\nGoodness of fit\nCommunity analysis\n\nSetayesh, Zadeh, & Bahrak (2022)\n\n\n\nAs such, given our data is of a spatial-temporal network nature, of particular interest is the article by Wang, et al. (2019) that studied how to visually analyse the relationship between global trade networks and regional instability. They created an “an integration of space, time, and network analysis methods to support the linked analysis of trade network data and conflict events through anomaly detection and correlation analysis across imports, exports and triadic structures” (Wang, et al., 2019).\n\n\n\n\n\n\n\n\nType of data\nVisual Analytics Methods\nAuthors\n\n\n\n\nTrade data, Stability data (governance indicators), Economic data (GDP, GDP per capita)\n\nCorrelation-based Country-Product Matrix\nAnomaly Time Series\nChoropleth view\nTrade diffusion graph\nClustering and Comparison\n\nGönçer-Demiral & İnce-Yenilmez (2022)"
  },
  {
    "objectID": "proposal/proposal.html#project-objectives",
    "href": "proposal/proposal.html#project-objectives",
    "title": "Project Proposal",
    "section": "PROJECT OBJECTIVES 🎯",
    "text": "PROJECT OBJECTIVES 🎯\nThe team endeavors to meet three objectives from this project:\na. First objective is to analyse the Purchasing Power Parity (PPP) utilising the Big Mac Index as a proxy gauge for inflation between countries in a light-hearted manner. This will allow users to gain insights on their expenditure power abroad in comparison to their native country. As part of economic indicators, variables such as GDP deflator, GDP per Capita, Consumer Price Index, Imports and Exports, Wages will be used to validate this analysis as a form of univariate and bi-variate analysis.\nb. The second objective would be to build a time-series clustering network predictive model in a bid to (1) analyse trends and patterns from a selected time period, (years 2000 – 2023), (2) associate the patterns or countries into clusters based on associations/correlations, and (3) forecast projections of BM Index for the next 5 – 10 years as part of a predictive model.\nc. The final objective would be to build an interactive dashboard with interactive means for the user to perform fine-tuning methods to gain insights. This interactivity should allow a degree of autonomy to users such that they can gain from uni, bi, multi-variate analysis and the Network and Time-Series modelling that have been pre-built at the back-end of our application.1."
  },
  {
    "objectID": "proposal/proposal.html#dataset",
    "href": "proposal/proposal.html#dataset",
    "title": "Project Proposal",
    "section": "DATASET 📊",
    "text": "DATASET 📊\n\n\n\nData\nSource\nDescription\n\n\n\n\nBig Mac Index (2000-2023)\nThe Economist\nThis dataset includes semi-annual data from 29 countries and regions. It encompasses local prices of Big Macs, their equivalent in USD and other major currencies like the Euro and CNY, along with both the raw and GDP-adjusted Big Mac Index.\n\n\nGDP and Related Metrics (2000-2022)\nThe World Bank\nAnnual data covering GDP, GDP per Capita, and inflation rates. This dataset provides an economic context for the countries included in the Big Mac Index.\n\n\nWorld Export & Import Dataset (1989 - 2023)\nKaggle\nAnnual data covering various aspects of trade, including trade values, tariff rates, and trade policy indicators for numerous countries over multiple years.\n\n\nCurrency Exchange Rates (From 2000)\nOECD\nExchange rates to USD, complement the Big Mac Index data by offering additional insights into currency valuation trends over time.\n\n\n\nThe combination of these datasets provides a comprehensive view of economic indicators, currency valuations, and purchasing power across different regions, enhancing the analytical depth of our project."
  },
  {
    "objectID": "proposal/proposal.html#limitations",
    "href": "proposal/proposal.html#limitations",
    "title": "Project Proposal",
    "section": "LIMITATIONS ⚙️",
    "text": "LIMITATIONS ⚙️\nThe team was cognisant of the limitations of the dataset and project. Three limitations were identified:\n\nConsistency of Data Set\nOne of the limitations of using Big Mac Index is in its consistency of valuation within a country. The index price inconsistency can be found within the different sub-regions and estates within the countries. To this end, the team will utilise appropriate statistical aggregation as the most appropriate representation of the BM Index of the selected country.\n\n\nGranularity of Data\nThe next limitation of using the Big Mac Index would be its granularity The prices of sub-ingredients within the Big Mac such as flour, sugar, meat, lettuce and etc, would impact the overall Big Mac Index. The team will be doing a closer study on how this granularity and whether it is significant to stray a coherent analysis.\n\n\nEffects of Fiscal Policies\nBig Mac Prices Valuation would be artificially affected due to fiscal policies that the countries’ governments introduced to suppress the effects of inflation, hence getting an undervalued Big Mac Index."
  },
  {
    "objectID": "proposal/proposal.html#analysis-tasks",
    "href": "proposal/proposal.html#analysis-tasks",
    "title": "Project Proposal",
    "section": "ANALYSIS TASKS 📍",
    "text": "ANALYSIS TASKS 📍\nThis is a list of analytical tasks for our visual analysis of BMI (adapted from Zhou, et al., 2017).\n\nSpatial visualisation\nWe are interested in providing global and local views to show the levels of inflation for different countries in the world. We foresee the following challenges of 1) how can we measure the similarities between different countries with different dimensional features, 2) how can we present the spatial clusters with similar inflation trajectories, 3) how can we present the different spatial clusters, and 4) how can we present a comparative view of inflation trajectories of say two countries of interest?\n\n\nTemporal visualisation\nWe want to show the trajectory of inflation over time in different countries. We foresee the following challenges of 1) how to have a deeper exploration of trajectories of the spatial clusters of interest, 2) how to track consistent spatial clusters across time intervals, 3) how to quantify these changes of spatial clusters over time, and 4) how to identify changing clusters with similar dimensional features over time?\n\n\nNetwork visualisation\nWe want to show the directionality and weight of the trade amongst different countries. We foresee the following challenges of 1) how to investigate the different trade measures of a country of interest, 2) the possible influence between countries on their trade network, and 3), how do we group similar countries based on their trade trajectories and compare their trade networks?\n\n\nSpatial-temporal multidimensional network visualisation\nWe want to integrate the spatial, temporal and network information seamlessly throughout the different visualisations we use. We foresee the challenges of 1) how do we allow quick reference to spatial clusters, 2) how do we showcase the temporal inflation trajectories of spatial clusters of interest, 3) how do we explore other spatial clusters that exhibit similar temporal and network dynamics that indicate inflation?"
  },
  {
    "objectID": "proposal/proposal.html#methodology",
    "href": "proposal/proposal.html#methodology",
    "title": "Project Proposal",
    "section": "METHODOLOGY 🔍",
    "text": "METHODOLOGY 🔍\n Our analytical approach will encompass a structured and iterative data analysis and predictive modeling process, integrating various R libraries to handle specific tasks:\n\nData Wrangling\n\nLeveraging R libraries such as `dplyr` for data manipulation and `tidyr` for data tidying, we will extract, clean, and preprocess data from diverse sources, ensuring data quality and consistency. Feature engineering will be conducted to enhance model input.\n\n\n\nData Sense Making\n\nExploratory Data Analysis (EDA): Using `ggplot2` for data visualization, we will conduct univariate and bivariate analyses to uncover patterns and relationships within the Big Mac Index and economic indicators like GDP per capita.\nConfirmatory Data Analysis (CDA): With `ggstatsplot`, we will perform statistical tests to validate our initial EDA findings, seeking to establish confidence in the observed trends.\nMultivariate Analysis: Advanced visualization techniques, possibly utilizing `treemap` or `plotly`, will help us depict the multi-faceted relationships in our dataset.\n\n\n\nMulti-Dimensional Time Series Clustering\n\nGeo-visualisation and analysis: Spatial data patterns will be explored using packages such as `sf` and `ggmap` to incorporate geographical context into the Big Mac Index analysis.\nTime Series Clustering: The `tsclust` package will enable the identification of similar trajectories among countries’ economic indicators over time, inform the clustering of countries based on these time-dependent patterns.\nNetwork analysis: Trade relationship patterns between countries will be explored using packages such as ‘visNetwork’ to provide a network analysis to understanding the impact on trade on BMI.\n\n\n\nBuilding a Predictive Model\n\nForecasting Model: We will apply time series forecasting techniques, utilizing packages like `forecast` and `prophet`, to predict future Big Mac Index values.\nFine Tuning Parameters: Our interactive dashboard, constructed using `shiny`, will allow users to adjust model parameters dynamically, enhancing the model’s applicability to various analytical scenarios"
  },
  {
    "objectID": "proposal/proposal.html#r-shiny-app",
    "href": "proposal/proposal.html#r-shiny-app",
    "title": "Project Proposal",
    "section": "R SHINY APP 💻",
    "text": "R SHINY APP 💻\n\n\n\n\n\n\nUser stories (adapted from Priselac, 2021)\n\n\n\n\nAs a casual user, I want to be able to select a country on the map so that I can see the inflation trajectory of my country of interest.\nAs a casual user, I want to see how my country of interest is connected via trade to other countries.\nAs a casual user, I want to be able to compare my country of interest with another country of interest and compare their inflation trajectory.\nAs a casual user, I want to examine a year of interest so that I can see the values of all relevant dimensional features.\nAs a causal user, I want to see how the inflation trajectory changes through the years amongst countries.\nAs a casual user, I want to identify which countries would suffer from the next inflation.\nAs an expert user, I want to be able to zoom into countries with similar inflation trajectories as my country of interest and study what are their similarities and differences in other features.\nAs an expert user, I want to be able to interact with any chart and have a detailed exploration of that chart.\nAs an expert user, I want to tweak the parameters of the models used and compare the results.\nAs an expert user, I want to compare the trade networks involved in countries of similar inflation trajectories.\n\n\n\nTherefore, in response to the need for accessible and nuanced social-economic analysis tools, the R Shiny app demystifies complex financial data for the public while offering robust functionality for experts. Our app will utilise the Big Mac Index and other economic datasets to present a user-friendly interface with powerful analytical capabilities.\nThe tool will feature intuitive visualisation options to make complex data comprehensible, alongside advanced functionalities for data visualization, modelling, and hypothesis testing. Users will be able to adjust parameters, explore different modelling scenarios, and derive additional insights that go beyond the standard analyses provided by existing government dashboards. The ultimate goal is to enhance public understanding of global financial and social indicators while offering a sophisticated analysis platform for professional use.\n\nKey Features\n\nDynamic Univariate Analysis: Users will be able to engage with interactive visualizations like histograms and boxplots to analyze single variables, such as local Big Mac prices, adjusting for inflation, GDP, and evaluating statistical significance.\nComparative Bivariate Analysis: The app will feature tools to create scatter plots and correlation matrices, allowing a deep dive into the relationships between pairs of variables like the Big Mac Index and GDP, with functionality to control for economic factors.\nIn-depth Multivariate Analysis: Utilizing treemaps and other multivariate visualization techniques, users can dissect complex relationships by grouping data based on selectable parameters across chosen timeframes.\nGeo-Spatial Visualization: Interactive thematic maps will showcase the geographical distribution of the Big Mac Index and other indicators, providing visual insights into global economic diversity and purchasing power.\nNetwork Visualization: Interactive thematic maps will showcase the trade connections and its magnitude between countries. The map can show the trade dependency of the selected country to other countries. This can be toggled between import and export.\nTime-Series Analysis and Clustering: Customizable line graphs will depict the evolution of the Big Mac Index, with clustering features to categorize countries with similar economic trajectories, all based on user-defined criteria.\nPredictive Forecasting:  Incorporating time-series forecasting, our app will allow users to project the Big Mac Index and associated economic measures into the future, informed by past and present trends.\n\n\n\nAdditional features\n\nCustomizable EDA and CDA Tools: Users will have the flexibility to change arguments in R directly through the interface, allowing them to choose different statistical tests and measures for Exploratory Data Analysis (EDA) and Confirmatory Data Analysis (CDA), thereby enabling diverse hypothesis testing and validation approaches.\nInteractive Data Selection: A flexible data selection feature will enable users to curate the dataset by choosing specific countries, time periods, and economic metrics, such as GDP and inflation rates\nParameter Tuning Interface: Through sliders, input boxes, and dropdown menus, users will have the agency to fine-tune model parameters, engaging directly with the forecasting and clustering analyses."
  },
  {
    "objectID": "proposal/proposal.html#scope-of-work",
    "href": "proposal/proposal.html#scope-of-work",
    "title": "Project Proposal",
    "section": "SCOPE OF WORK ⭐",
    "text": "SCOPE OF WORK ⭐\nOur project execution will be a collaborative effort with each team member contributing to various phases. To ensure adherence to our timeline and resolution of any disagreements, specific members will take the lead on different phases\n\n\n\n\n\n\n\n\n\n\nPhase\nTask\nDescription\nAssignment\nLead\n\n\n\n\n1\nWeek 6\nData Wrangling\nPrepare data for further analysis\nAll team members will simultaneously review the datasets. Discussions will finalize the datasets for analysis.\n\n\n\n2\nWeeks 7-8\nExploratory Data Analysis (EDA) & Confirmatory Data Analysis (CDA)\nConducted concurrently to inform potential visualizations and interactive elements for the R Shiny dashboard\nUnivariate Analysis: Jiayi\nBivariate Analysis: Vic\nMultivariate Analysis: Firdaus\nJiayi\n\n\n3\nWeeks 8-9\nData Modelling\nFocused on clustering and model exploration to determine dashboard parameters\nTime Series Clustering: Jiayi\nForecasting Model Development: Firdaus\nNetwork Analysis: Vic\nVic\n\n\n4\nWeeks 9-10\nDashboard Development\nDashboard deployment\nEach member will implement their respective components as designed in earlier phases. Firdaus will be in charge of developing and ensuring the framework and consistency of the dashboard.\nFirdaus"
  },
  {
    "objectID": "proposal/proposal.html#reference",
    "href": "proposal/proposal.html#reference",
    "title": "Project Proposal",
    "section": "REFERENCE 🔖",
    "text": "REFERENCE 🔖\nDhont, M., Tsiporkova, E., Tourwé, T., & González-Deleito, N. (2020). Visual Analytics for Extracting Trends from Spatio-temporal Data. Advanced Analytics and Learning on Temporal Data, (pp. 122-137).\nGönçer-Demiral, D., & İnce-Yenilmez, M. (2022). Network analysis of international export pattern. Social Network Analysis and Mining.\nHo, P., Sarte, P.-D. G., & Schwartzman, F. F. (January, 2023). How Does Trade Impact the Way GDP Growth and Inflation Comove Across Countries? Retrieved from Federal Reserve Bank of Richmond: https://www.richmondfed.org/publications/research/economic_brief/2023/eb_23-01#:~:text=23%2D01-,How%20Does%20Trade%20Impact%20the%20Way,and%20Inflation%20Comove%20Across%20Countries%3F&text=Seemingly%20small%20international%20trade%20linkages,growth%20and\nPriselac, M. (12 October, 2021). Visual Analytics of Spatial Time. Retrieved from TU Wien Informatics: https://www.academia.edu/download/97273014/Priselac2021-Master_20Thesis.pdf\nSetayesh, A., Zadeh, Z. S., & Bahrak, B. (2022). Analysis of the global trade network using exponential random graph models. Applied Network Science.\nSoćko, K. (19 June, 2023). Clustering Countries Based on Multidimensional Time Series. Retrieved from Medium: https://medium.com/@kamilasocko/clustering-countries-based-on-multidimensional-time-series-66c7c96120d9\nTan, C., & Dramowicz, K. (2016). Geovisualization and analysis of the Good Country Index. IOP Conference Series: Earth and Environmental Science. Halifax.\nTiwari, A. K., Abakah, E. J., Gil-Alana, L. A., & Abakah, M. K. (2021). Inflation Co-Movement Dynamics: A Cross-Country Investigation Using a Continuous Wavelet Approach. MDPI, 613.\nWang, H., Lu, Y., Shutters, S. T., Steptoe, M., Wang, F., Landis, S., & Maciejewski, R. (2019). A Visual Analytics Framework for Spatiotemporal Trade Network Analysis. IEEE TRANSACTIONS ON VISUALIZATION AND COMPUTER GRAPHICS, 331-341.\nZhou, Z., Li, H., Liu, F., Liu, Y., Huang, C., Tao, Y., . . . Su, W. (2017). Visual analytics of economic features for multivariate spatio-temporal GDP data. Journal of Visualization, 337-350."
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html",
    "title": "Data Preparation & Cleaning",
    "section": "",
    "text": "The following code snippet imports the necessary packages used for our analysis:\n\nTidyverse: An aggregation of R packages designed for data science.\nDplyr and tidyr: Part of the tidyverse, these packages are instrumental in data manipulation and tidying, respectively.\nReadxl: Facilitates the import of Excel files.\n\n\npacman::p_load(tidyverse, readxl, dplyr, tidyr) \n\n\n\n\nThe code below imports the Big Mac dataset, which serves as the primary data source for this analysis. The dataset is in CSV format and was downloaded from the Economist’s GitHub page. Prior to import, some less relevant columns were removed for clarity.\n\nbig_mac &lt;- read_csv(\"data/big_mac.csv\")\n\nThe dataset comprises 9 columns, encompassing 1,386 entries across 29 countries and regions from the year 2000 onward. Notably, for some countries, there are multiple records per year. The date column is initially in character format and requires conversion to a date format for accurate analysis.\nThe code chunk below converts the date column to a date format\n\nbig_mac$date &lt;- dmy(big_mac$date)\n\nThe code below provides a preview of the Big Mac dataset\n\nhead(big_mac)\n\n# A tibble: 6 × 9\n  date       iso_a3 currency_code name      local_price dollar_ex dollar_price\n  &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;\n1 2000-04-01 ARG    ARS           Argentina        2.5      1             2.5 \n2 2000-04-01 AUS    AUD           Australia        2.59     1.68          1.54\n3 2000-04-01 BRA    BRL           Brazil           2.95     1.79          1.65\n4 2000-04-01 GBR    GBP           Britain          1.9      0.633         3.00\n5 2000-04-01 CAN    CAD           Canada           2.85     1.47          1.94\n6 2000-04-01 CHL    CLP           Chile         1260      514             2.45\n# ℹ 2 more variables: GDP_bigmac &lt;dbl&gt;, adj_price &lt;dbl&gt;\n\n\n\n\n\ncomplementary dataset are imported to add in additional indicators\n\nimport export data\nGDP\nGDP per Capita\ninflation\nGDP per Employed\nUnemployment Rate\nHuman Development Index (HDI)\nPopulation\n\nOther then import export data is from Kaggle, all other indicators are from the World Bank\nThe code chunk below imports the import export data\n\nexport &lt;- read_csv(\"data/export.csv\")\n\n\nhead(export)\n\n# A tibble: 6 × 33\n  `Partner Name`  Year `Export (US$ Thousand)` `Import (US$ Thousand)`\n  &lt;chr&gt;          &lt;dbl&gt;                   &lt;dbl&gt;                   &lt;dbl&gt;\n1 Aruba           1988                   3498.                    328.\n2 Afghanistan     1988                 213030.                  54460.\n3 Angola          1988                 375528.                 370703.\n4 Anguila         1988                    367.                      4 \n5 Albania         1988                  30104.                  47709.\n6 Andorra         1988                  67924.                   3284.\n# ℹ 29 more variables: `Export Product Share (%)` &lt;dbl&gt;,\n#   `Import Product Share (%)` &lt;dbl&gt;, `Revealed comparative advantage` &lt;dbl&gt;,\n#   `World Growth (%)` &lt;dbl&gt;, `Country Growth (%)` &lt;dbl&gt;,\n#   `AHS Simple Average (%)` &lt;dbl&gt;, `AHS Weighted Average (%)` &lt;dbl&gt;,\n#   `AHS Total Tariff Lines` &lt;dbl&gt;,\n#   `AHS Dutiable Tariff Lines Share (%)` &lt;dbl&gt;,\n#   `AHS Duty Free Tariff Lines Share (%)` &lt;dbl&gt;, …\n\n\nthe table is in long format\nthe code chunk below imports\n\ngdp &lt;- read_csv(\"data/gdp.csv\")\ngdp_capita &lt;- read_csv(\"data/gdp_capita.csv\")\ngdp_employed &lt;- read_csv(\"data/gdp_employed.csv\")\ninflation &lt;- read_csv(\"data/inflation.csv\")\nunemployment &lt;- read_csv(\"data/unemployment_rate.csv\")\npopulation &lt;- read_csv(\"data/population.csv\")\n\nthe code chunk below display an overview of the dataframe\n\nhead(gdp)\n\n# A tibble: 6 × 27\n  `Series Name`     `Series Code`  `Country Name` `Country Code` `2000 [YR2000]`\n  &lt;chr&gt;             &lt;chr&gt;          &lt;chr&gt;          &lt;chr&gt;          &lt;chr&gt;          \n1 GDP (current US$) NY.GDP.MKTP.CD Afghanistan    AFG            ..             \n2 GDP (current US$) NY.GDP.MKTP.CD Albania        ALB            3480355258     \n3 GDP (current US$) NY.GDP.MKTP.CD Algeria        DZA            54790398570    \n4 GDP (current US$) NY.GDP.MKTP.CD American Samoa ASM            ..             \n5 GDP (current US$) NY.GDP.MKTP.CD Andorra        AND            1429047882     \n6 GDP (current US$) NY.GDP.MKTP.CD Angola         AGO            9129594816     \n# ℹ 22 more variables: `2001 [YR2001]` &lt;chr&gt;, `2002 [YR2002]` &lt;chr&gt;,\n#   `2003 [YR2003]` &lt;chr&gt;, `2004 [YR2004]` &lt;chr&gt;, `2005 [YR2005]` &lt;chr&gt;,\n#   `2006 [YR2006]` &lt;chr&gt;, `2007 [YR2007]` &lt;chr&gt;, `2008 [YR2008]` &lt;chr&gt;,\n#   `2009 [YR2009]` &lt;chr&gt;, `2010 [YR2010]` &lt;chr&gt;, `2011 [YR2011]` &lt;chr&gt;,\n#   `2012 [YR2012]` &lt;chr&gt;, `2013 [YR2013]` &lt;chr&gt;, `2014 [YR2014]` &lt;chr&gt;,\n#   `2015 [YR2015]` &lt;chr&gt;, `2016 [YR2016]` &lt;chr&gt;, `2017 [YR2017]` &lt;chr&gt;,\n#   `2018 [YR2018]` &lt;chr&gt;, `2019 [YR2019]` &lt;chr&gt;, `2020 [YR2020]` &lt;chr&gt;, …\n\n\n\nhead(population)\n\n# A tibble: 6 × 25\n  `Country Name`  `Country Code` `Indicator Name` `Indicator Code` `2002` `2003`\n  &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;            &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;\n1 Aruba           ABW            Population, tot… SP.POP.TOTL      9.18e4 9.27e4\n2 Africa Eastern… AFE            Population, tot… SP.POP.TOTL      4.23e8 4.34e8\n3 Afghanistan     AFG            Population, tot… SP.POP.TOTL      2.10e7 2.26e7\n4 Africa Western… AFW            Population, tot… SP.POP.TOTL      2.85e8 2.93e8\n5 Angola          AGO            Population, tot… SP.POP.TOTL      1.75e7 1.81e7\n6 Albania         ALB            Population, tot… SP.POP.TOTL      3.05e6 3.04e6\n# ℹ 19 more variables: `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, `2006` &lt;dbl&gt;, `2007` &lt;dbl&gt;,\n#   `2008` &lt;dbl&gt;, `2009` &lt;dbl&gt;, `2010` &lt;dbl&gt;, `2011` &lt;dbl&gt;, `2012` &lt;dbl&gt;,\n#   `2013` &lt;dbl&gt;, `2014` &lt;dbl&gt;, `2015` &lt;dbl&gt;, `2016` &lt;dbl&gt;, `2017` &lt;dbl&gt;,\n#   `2018` &lt;dbl&gt;, `2019` &lt;dbl&gt;, `2020` &lt;dbl&gt;, `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;\n\n\nthese indicators are in short format and it is necessary to convert it to long format first so that it can join with the big mac table\nthe function below converts the input into a long table format\nto be updated\nhdi is in long format\n\nhdi &lt;- read_csv(\"data/inequality-adjusted-hdi.csv\")\n\nrename the column for easier understanding\n\nhdi &lt;- hdi %&gt;% rename(hdi = ihdi)"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#import-package",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#import-package",
    "title": "Data Preparation & Cleaning",
    "section": "",
    "text": "The following code snippet imports the necessary packages used for our analysis:\n\nTidyverse: An aggregation of R packages designed for data science.\nDplyr and tidyr: Part of the tidyverse, these packages are instrumental in data manipulation and tidying, respectively.\nReadxl: Facilitates the import of Excel files.\n\n\npacman::p_load(tidyverse, readxl, dplyr, tidyr)"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#import-big-mac-data",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#import-big-mac-data",
    "title": "Data Preparation & Cleaning",
    "section": "",
    "text": "The code below imports the Big Mac dataset, which serves as the primary data source for this analysis. The dataset is in CSV format and was downloaded from the Economist’s GitHub page. Prior to import, some less relevant columns were removed for clarity.\n\nbig_mac &lt;- read_csv(\"data/big_mac.csv\")\n\nThe dataset comprises 9 columns, encompassing 1,386 entries across 29 countries and regions from the year 2000 onward. Notably, for some countries, there are multiple records per year. The date column is initially in character format and requires conversion to a date format for accurate analysis.\nThe code chunk below converts the date column to a date format\n\nbig_mac$date &lt;- dmy(big_mac$date)\n\nThe code below provides a preview of the Big Mac dataset\n\nhead(big_mac)\n\n# A tibble: 6 × 9\n  date       iso_a3 currency_code name      local_price dollar_ex dollar_price\n  &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;\n1 2000-04-01 ARG    ARS           Argentina        2.5      1             2.5 \n2 2000-04-01 AUS    AUD           Australia        2.59     1.68          1.54\n3 2000-04-01 BRA    BRL           Brazil           2.95     1.79          1.65\n4 2000-04-01 GBR    GBP           Britain          1.9      0.633         3.00\n5 2000-04-01 CAN    CAD           Canada           2.85     1.47          1.94\n6 2000-04-01 CHL    CLP           Chile         1260      514             2.45\n# ℹ 2 more variables: GDP_bigmac &lt;dbl&gt;, adj_price &lt;dbl&gt;"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#import-complementary-data-set",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#import-complementary-data-set",
    "title": "Data Preparation & Cleaning",
    "section": "",
    "text": "complementary dataset are imported to add in additional indicators\n\nimport export data\nGDP\nGDP per Capita\ninflation\nGDP per Employed\nUnemployment Rate\nHuman Development Index (HDI)\nPopulation\n\nOther then import export data is from Kaggle, all other indicators are from the World Bank\nThe code chunk below imports the import export data\n\nexport &lt;- read_csv(\"data/export.csv\")\n\n\nhead(export)\n\n# A tibble: 6 × 33\n  `Partner Name`  Year `Export (US$ Thousand)` `Import (US$ Thousand)`\n  &lt;chr&gt;          &lt;dbl&gt;                   &lt;dbl&gt;                   &lt;dbl&gt;\n1 Aruba           1988                   3498.                    328.\n2 Afghanistan     1988                 213030.                  54460.\n3 Angola          1988                 375528.                 370703.\n4 Anguila         1988                    367.                      4 \n5 Albania         1988                  30104.                  47709.\n6 Andorra         1988                  67924.                   3284.\n# ℹ 29 more variables: `Export Product Share (%)` &lt;dbl&gt;,\n#   `Import Product Share (%)` &lt;dbl&gt;, `Revealed comparative advantage` &lt;dbl&gt;,\n#   `World Growth (%)` &lt;dbl&gt;, `Country Growth (%)` &lt;dbl&gt;,\n#   `AHS Simple Average (%)` &lt;dbl&gt;, `AHS Weighted Average (%)` &lt;dbl&gt;,\n#   `AHS Total Tariff Lines` &lt;dbl&gt;,\n#   `AHS Dutiable Tariff Lines Share (%)` &lt;dbl&gt;,\n#   `AHS Duty Free Tariff Lines Share (%)` &lt;dbl&gt;, …\n\n\nthe table is in long format\nthe code chunk below imports\n\ngdp &lt;- read_csv(\"data/gdp.csv\")\ngdp_capita &lt;- read_csv(\"data/gdp_capita.csv\")\ngdp_employed &lt;- read_csv(\"data/gdp_employed.csv\")\ninflation &lt;- read_csv(\"data/inflation.csv\")\nunemployment &lt;- read_csv(\"data/unemployment_rate.csv\")\npopulation &lt;- read_csv(\"data/population.csv\")\n\nthe code chunk below display an overview of the dataframe\n\nhead(gdp)\n\n# A tibble: 6 × 27\n  `Series Name`     `Series Code`  `Country Name` `Country Code` `2000 [YR2000]`\n  &lt;chr&gt;             &lt;chr&gt;          &lt;chr&gt;          &lt;chr&gt;          &lt;chr&gt;          \n1 GDP (current US$) NY.GDP.MKTP.CD Afghanistan    AFG            ..             \n2 GDP (current US$) NY.GDP.MKTP.CD Albania        ALB            3480355258     \n3 GDP (current US$) NY.GDP.MKTP.CD Algeria        DZA            54790398570    \n4 GDP (current US$) NY.GDP.MKTP.CD American Samoa ASM            ..             \n5 GDP (current US$) NY.GDP.MKTP.CD Andorra        AND            1429047882     \n6 GDP (current US$) NY.GDP.MKTP.CD Angola         AGO            9129594816     \n# ℹ 22 more variables: `2001 [YR2001]` &lt;chr&gt;, `2002 [YR2002]` &lt;chr&gt;,\n#   `2003 [YR2003]` &lt;chr&gt;, `2004 [YR2004]` &lt;chr&gt;, `2005 [YR2005]` &lt;chr&gt;,\n#   `2006 [YR2006]` &lt;chr&gt;, `2007 [YR2007]` &lt;chr&gt;, `2008 [YR2008]` &lt;chr&gt;,\n#   `2009 [YR2009]` &lt;chr&gt;, `2010 [YR2010]` &lt;chr&gt;, `2011 [YR2011]` &lt;chr&gt;,\n#   `2012 [YR2012]` &lt;chr&gt;, `2013 [YR2013]` &lt;chr&gt;, `2014 [YR2014]` &lt;chr&gt;,\n#   `2015 [YR2015]` &lt;chr&gt;, `2016 [YR2016]` &lt;chr&gt;, `2017 [YR2017]` &lt;chr&gt;,\n#   `2018 [YR2018]` &lt;chr&gt;, `2019 [YR2019]` &lt;chr&gt;, `2020 [YR2020]` &lt;chr&gt;, …\n\n\n\nhead(population)\n\n# A tibble: 6 × 25\n  `Country Name`  `Country Code` `Indicator Name` `Indicator Code` `2002` `2003`\n  &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;            &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;\n1 Aruba           ABW            Population, tot… SP.POP.TOTL      9.18e4 9.27e4\n2 Africa Eastern… AFE            Population, tot… SP.POP.TOTL      4.23e8 4.34e8\n3 Afghanistan     AFG            Population, tot… SP.POP.TOTL      2.10e7 2.26e7\n4 Africa Western… AFW            Population, tot… SP.POP.TOTL      2.85e8 2.93e8\n5 Angola          AGO            Population, tot… SP.POP.TOTL      1.75e7 1.81e7\n6 Albania         ALB            Population, tot… SP.POP.TOTL      3.05e6 3.04e6\n# ℹ 19 more variables: `2004` &lt;dbl&gt;, `2005` &lt;dbl&gt;, `2006` &lt;dbl&gt;, `2007` &lt;dbl&gt;,\n#   `2008` &lt;dbl&gt;, `2009` &lt;dbl&gt;, `2010` &lt;dbl&gt;, `2011` &lt;dbl&gt;, `2012` &lt;dbl&gt;,\n#   `2013` &lt;dbl&gt;, `2014` &lt;dbl&gt;, `2015` &lt;dbl&gt;, `2016` &lt;dbl&gt;, `2017` &lt;dbl&gt;,\n#   `2018` &lt;dbl&gt;, `2019` &lt;dbl&gt;, `2020` &lt;dbl&gt;, `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;\n\n\nthese indicators are in short format and it is necessary to convert it to long format first so that it can join with the big mac table\nthe function below converts the input into a long table format\nto be updated\nhdi is in long format\n\nhdi &lt;- read_csv(\"data/inequality-adjusted-hdi.csv\")\n\nrename the column for easier understanding\n\nhdi &lt;- hdi %&gt;% rename(hdi = ihdi)"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#big-mac-dat",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#big-mac-dat",
    "title": "Data Preparation & Cleaning",
    "section": "BIG MAC DAT",
    "text": "BIG MAC DAT\nconvert date to year\n\nbig_mac$year &lt;- year(big_mac$date)\nbig_mac\n\n# A tibble: 1,386 × 10\n   date       iso_a3 currency_code name       local_price dollar_ex dollar_price\n   &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt;         &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;\n 1 2000-04-01 ARG    ARS           Argentina         2.5      1             2.5 \n 2 2000-04-01 AUS    AUD           Australia         2.59     1.68          1.54\n 3 2000-04-01 BRA    BRL           Brazil            2.95     1.79          1.65\n 4 2000-04-01 GBR    GBP           Britain           1.9      0.633         3.00\n 5 2000-04-01 CAN    CAD           Canada            2.85     1.47          1.94\n 6 2000-04-01 CHL    CLP           Chile          1260      514             2.45\n 7 2000-04-01 CHN    CNY           China             9.9      8.28          1.20\n 8 2000-04-01 CZE    CZK           Czech Rep…       54.4     39.1           1.39\n 9 2000-04-01 DNK    DKK           Denmark          24.8      8.04          3.08\n10 2000-04-01 HKG    HKD           Hong Kong        10.2      7.79          1.31\n# ℹ 1,376 more rows\n# ℹ 3 more variables: GDP_bigmac &lt;dbl&gt;, adj_price &lt;dbl&gt;, year &lt;dbl&gt;\n\n\nsome of country name is not consistent, rename\n\nbig_mac &lt;- big_mac %&gt;%\n  mutate(name = case_when(\n    name == 'United Arab Emirates' ~ 'UAE',\n    TRUE ~ name \n  ))\n\ncheck number of records per year\n\nentries_per_year_country &lt;- big_mac %&gt;%\n  group_by(year, name) %&gt;%\n  summarize(count = n())\n\nAs most countries only contains 1 record each year, the earliest record for each year will be kept for easier manipulation\n\nfirst_records &lt;- big_mac %&gt;%\n  group_by(year, name) %&gt;%\n  slice(1)\n\nrename some variables\n\nbig_mac_new &lt;- first_records %&gt;%\n  select(country = name, \n         year, \n         currency_code, \n         bmi_localprice = local_price, \n         bmi_usd_price = dollar_price, \n         bmi_gdpadj_price = adj_price, \n         dollar_ex, \n         GDP_bigmac\n    \n  )"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#other-data",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#other-data",
    "title": "Data Preparation & Cleaning",
    "section": "other data",
    "text": "other data\n\nexport\n\nhead(export)\n\n# A tibble: 6 × 33\n  `Partner Name`  Year `Export (US$ Thousand)` `Import (US$ Thousand)`\n  &lt;chr&gt;          &lt;dbl&gt;                   &lt;dbl&gt;                   &lt;dbl&gt;\n1 Aruba           1988                   3498.                    328.\n2 Afghanistan     1988                 213030.                  54460.\n3 Angola          1988                 375528.                 370703.\n4 Anguila         1988                    367.                      4 \n5 Albania         1988                  30104.                  47709.\n6 Andorra         1988                  67924.                   3284.\n# ℹ 29 more variables: `Export Product Share (%)` &lt;dbl&gt;,\n#   `Import Product Share (%)` &lt;dbl&gt;, `Revealed comparative advantage` &lt;dbl&gt;,\n#   `World Growth (%)` &lt;dbl&gt;, `Country Growth (%)` &lt;dbl&gt;,\n#   `AHS Simple Average (%)` &lt;dbl&gt;, `AHS Weighted Average (%)` &lt;dbl&gt;,\n#   `AHS Total Tariff Lines` &lt;dbl&gt;,\n#   `AHS Dutiable Tariff Lines Share (%)` &lt;dbl&gt;,\n#   `AHS Duty Free Tariff Lines Share (%)` &lt;dbl&gt;, …\n\n\nrename export column and filter important columns for joining\n\nexport_data &lt;- rename(export, country = `Partner Name`, year = Year) %&gt;%\n  select(country, \n         year,\n         export_usd = `Export (US$ Thousand)`,\n         import_usd = `Import (US$ Thousand)`)\n\nrename some of the country and location name\n\nexport_data &lt;- export_data %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Hong Kong, China\" ~ \"Hong Kong\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == 'Egypt, Arab Rep.' ~ 'Egypt',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    TRUE ~ country  \n  ))\n\njoin the big mac data with export data\n\njoined_data &lt;- left_join(big_mac_new, export_data, by = c(\"country\", \"year\"))\n\n\n\nGDP data\nreformat to long format\n\ngdp_long_format &lt;- gdp %&gt;%\n  pivot_longer(\n    cols = -c(`Series Name`, `Series Code`, `Country Name`, `Country Code`),  \n    names_to = \"year\",\n    names_pattern = \"^\\\\d{4} \\\\[YR(\\\\d{4})\\\\]\",  \n    values_to = \"GDP\"\n  ) %&gt;%\n  select(country = `Country Name`, year, GDP)\n\ngdp_long_format$year &lt;- as.integer(gdp_long_format$year)\n\nconvert missing data\n\ngdp_long_format &lt;- gdp_long_format %&gt;%\n  mutate(GDP = na_if(GDP, \"..\"))\n\nrename columns in GDP\n\ngdp_long_format &lt;- gdp_long_format %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Czechia\" ~ \"Czech Republic\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n    country == 'Hong Kong SAR, China' ~ 'Hong Kong',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    country == 'Viet Nam' ~ 'Vietnam',\n    country == 'Turkiye' ~ 'Turkey',\n    country == 'Venezuela, RB' ~ 'Venezuela',\n    TRUE ~ country  \n  ))\n\njoin big mac data with gdp\n\njoined_data &lt;- left_join(joined_data, gdp_long_format, by = c(\"country\", \"year\"))\n\n\n\nGDP per Capita\nreformat to long format\n\ngdp_capita_long_format &lt;- gdp_capita %&gt;%\n  pivot_longer(\n    cols = -c(`Series Name`, `Series Code`, `Country Name`, `Country Code`),  \n    names_to = \"year\",\n    names_pattern = \"^\\\\d{4} \\\\[YR(\\\\d{4})\\\\]\",  \n    values_to = \"gdp_per_capita\"\n  ) %&gt;%\n  select(country = `Country Name`, year, gdp_per_capita)\n\ngdp_capita_long_format$year &lt;- as.integer(gdp_capita_long_format$year)\n\nconvert missing data\n\ngdp_capita_long_format &lt;- gdp_capita_long_format %&gt;%\n  mutate(gdp_per_capita = na_if(gdp_per_capita, \"..\"))\n\nrename columns\n\ngdp_capita_long_format &lt;- gdp_capita_long_format %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Czechia\" ~ \"Czech Republic\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n    country == 'Hong Kong SAR, China' ~ 'Hong Kong',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    country == 'Viet Nam' ~ 'Vietnam',\n    country == 'Turkiye' ~ 'Turkey',\n    country == 'Venezuela, RB' ~ 'Venezuela',\n    TRUE ~ country  \n  ))\n\njoin big mac data with gdp_per_capita\n\njoined_data &lt;- left_join(joined_data, gdp_capita_long_format, by = c(\"country\", \"year\"))\n\n\n\nGDP per Employed\nreformat to long format\n\ngdp_employed_long_format &lt;- gdp_employed %&gt;%\n  pivot_longer(\n    cols = -c(`Series Name`, `Series Code`, `Country Name`, `Country Code`),  \n    names_to = \"year\",\n    names_pattern = \"^\\\\d{4} \\\\[YR(\\\\d{4})\\\\]\",  \n    values_to = \"gdp_per_employed\"\n  ) %&gt;%\n  select(country = `Country Name`, year, gdp_per_employed)\n\ngdp_employed_long_format$year &lt;- as.integer(gdp_employed_long_format$year)\n\nconvert missing data\n\ngdp_employed_long_format &lt;- gdp_employed_long_format %&gt;%\n  mutate(gdp_per_employed = na_if(gdp_per_employed, \"..\"))\n\nrename columns in inflation\n\ngdp_employed_long_format &lt;- gdp_employed_long_format %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Czechia\" ~ \"Czech Republic\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n    country == 'Hong Kong SAR, China' ~ 'Hong Kong',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    country == 'Viet Nam' ~ 'Vietnam',\n    country == 'Turkiye' ~ 'Turkey',\n    country == 'Venezuela, RB' ~ 'Venezuela',\n    TRUE ~ country  \n  ))\n\njoin big mac data with gdp_per_employed\n\njoined_data &lt;- left_join(joined_data, gdp_employed_long_format, by = c(\"country\", \"year\"))\n\n\n\ninflation\nreformat to long format\n\ninflation_long_format &lt;- inflation %&gt;%\n  pivot_longer(\n    cols = -c(`Series Name`, `Series Code`, `Country Name`, `Country Code`),  \n    names_to = \"year\",\n    names_pattern = \"^\\\\d{4} \\\\[YR(\\\\d{4})\\\\]\",  \n    values_to = \"inflation\"\n  ) %&gt;%\n  select(country = `Country Name`, year, inflation)\n\ninflation_long_format$year &lt;- as.integer(inflation_long_format$year)\n\nconvert missing data\n\ninflation_long_format &lt;- inflation_long_format %&gt;%\n  mutate(inflation = na_if(inflation, \"..\"))\n\nrename columns in inflation\n\ninflation_long_format &lt;- inflation_long_format %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Czechia\" ~ \"Czech Republic\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n    country == 'Hong Kong SAR, China' ~ 'Hong Kong',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    country == 'Viet Nam' ~ 'Vietnam',\n    country == 'Turkiye' ~ 'Turkey',\n    country == 'Venezuela, RB' ~ 'Venezuela',\n    TRUE ~ country  \n  ))\n\njoin big mac data with inflation\n\njoined_data &lt;- left_join(joined_data, inflation_long_format, by = c(\"country\", \"year\"))\n\n\n\nunemployment\nreformat to long format\n\nunemployment_long_format &lt;- unemployment %&gt;%\n  pivot_longer(\n    cols = -c(`Indicator Name`, `Indicator Code`, `Country Name`, `Country Code`),  \n    names_to = \"year\",\n    values_to = \"unemployment\"\n  ) %&gt;%\n  select(country = `Country Name`, year, unemployment)\n\nunemployment_long_format$year &lt;- as.integer(unemployment_long_format$year)\n\nrename columns in unemployment\n\nunemployment_long_format &lt;- unemployment_long_format %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Czechia\" ~ \"Czech Republic\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n    country == 'Hong Kong SAR, China' ~ 'Hong Kong',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    country == 'Viet Nam' ~ 'Vietnam',\n    country == 'Turkiye' ~ 'Turkey',\n    country == 'Venezuela, RB' ~ 'Venezuela',\n    TRUE ~ country  \n  ))\n\njoin big mac data with unemployment\n\njoined_data &lt;- left_join(joined_data, unemployment_long_format, by = c(\"country\", \"year\"))\n\ntake a look at the dataframe\n\nhead(joined_data)\n\n# A tibble: 6 × 15\n# Groups:   year, country [6]\n  country    year currency_code bmi_localprice bmi_usd_price bmi_gdpadj_price\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                  &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;\n1 Argentina  2000 ARS                     2.5           2.5              1.92\n2 Australia  2000 AUD                     2.59          1.54             2.30\n3 Brazil     2000 BRL                     2.95          1.65             1.87\n4 Britain    2000 GBP                     1.9           3.00             2.16\n5 Canada     2000 CAD                     2.85          1.94             2.25\n6 Chile      2000 CLP                  1260             2.45             1.87\n# ℹ 9 more variables: dollar_ex &lt;dbl&gt;, GDP_bigmac &lt;dbl&gt;, export_usd &lt;dbl&gt;,\n#   import_usd &lt;dbl&gt;, GDP &lt;chr&gt;, gdp_per_capita &lt;chr&gt;, gdp_per_employed &lt;chr&gt;,\n#   inflation &lt;chr&gt;, unemployment &lt;dbl&gt;\n\n\n\n\nhdi\nselect columns\n\nhdi &lt;- hdi %&gt;% select(\"country\", \"year\", \"hdi\")\n\n\njoined_data &lt;- left_join(joined_data, hdi, by = c(\"country\", \"year\"))\n\n\n\npopulation\nreformat to long format\n\npopulation_long_format &lt;- population %&gt;%\n  pivot_longer(\n    cols = -c(`Indicator Name`, `Indicator Code`, `Country Name`, `Country Code`),  \n    names_to = \"year\",\n    values_to = \"population\"\n  ) %&gt;%\n  select(country = `Country Name`, year, population)\n\npopulation_long_format$year &lt;- as.integer(population_long_format$year)\n\nrename columns\n\npopulation_long_format &lt;- population_long_format %&gt;%\n  mutate(country = case_when(\n    country == \"Russian Federation\" ~ \"Russia\",\n    country == \"United Kingdom\" ~ \"Britain\",\n    country == \"Czechia\" ~ \"Czech Republic\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Egypt, Arab Rep.\" ~ \"Egypt\",\n    country == 'Hong Kong SAR, China' ~ 'Hong Kong',\n    country == 'Slovak Republic' ~ 'Slovakia',\n    country == 'United Arab Emirates' ~ 'UAE',\n    country == 'Viet Nam' ~ 'Vietnam',\n    country == 'Turkiye' ~ 'Turkey',\n    country == 'Venezuela, RB' ~ 'Venezuela',\n    TRUE ~ country  \n  ))\n\njoin with big mac\n\njoined_data &lt;- left_join(joined_data, population_long_format, by = c(\"country\", \"year\"))"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#check-for-missing-data",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#check-for-missing-data",
    "title": "Data Preparation & Cleaning",
    "section": "check for missing data",
    "text": "check for missing data\ndrop tai wan change name\n\nbig_mac_combined &lt;- joined_data %&gt;%\n  filter(country != \"Taiwan\", country != \"Euro area\")\n\nchange column datatype\n\nbig_mac_combined &lt;- big_mac_combined %&gt;%\n  mutate(\n    GDP = as.numeric(GDP),\n    inflation = as.numeric(inflation),\n    gdp_per_capita = as.numeric(gdp_per_capita),\n    gdp_per_employed = as.numeric(gdp_per_employed)\n  )\n\n\nhead(big_mac_combined)\n\n# A tibble: 6 × 17\n# Groups:   year, country [6]\n  country    year currency_code bmi_localprice bmi_usd_price bmi_gdpadj_price\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                  &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;\n1 Argentina  2000 ARS                     2.5           2.5              1.92\n2 Australia  2000 AUD                     2.59          1.54             2.30\n3 Brazil     2000 BRL                     2.95          1.65             1.87\n4 Britain    2000 GBP                     1.9           3.00             2.16\n5 Canada     2000 CAD                     2.85          1.94             2.25\n6 Chile      2000 CLP                  1260             2.45             1.87\n# ℹ 11 more variables: dollar_ex &lt;dbl&gt;, GDP_bigmac &lt;dbl&gt;, export_usd &lt;dbl&gt;,\n#   import_usd &lt;dbl&gt;, GDP &lt;dbl&gt;, gdp_per_capita &lt;dbl&gt;, gdp_per_employed &lt;dbl&gt;,\n#   inflation &lt;dbl&gt;, unemployment &lt;dbl&gt;, hdi &lt;dbl&gt;, population &lt;dbl&gt;\n\n\n\nsummary(big_mac_combined)\n\n   country               year      currency_code      bmi_localprice   \n Length:800         Min.   :2000   Length:800         Min.   :      1  \n Class :character   1st Qu.:2006   Class :character   1st Qu.:      6  \n Mode  :character   Median :2012   Mode  :character   Median :     21  \n                    Mean   :2012                      Mean   :  15913  \n                    3rd Qu.:2018                      3rd Qu.:    112  \n                    Max.   :2022                      Max.   :4000000  \n                                                                       \n bmi_usd_price   bmi_gdpadj_price   dollar_ex           GDP_bigmac   \n Min.   :0.640   Min.   :1.551    Min.   :      0.3   Min.   :    0  \n 1st Qu.:2.300   1st Qu.:2.647    1st Qu.:      2.7   1st Qu.: 7576  \n Median :2.978   Median :3.280    Median :      6.9   Median :17235  \n Mean   :3.218   Mean   :3.272    Mean   :   6076.0   Mean   :23545  \n 3rd Qu.:3.979   3rd Qu.:3.854    3rd Qu.:     45.6   3rd Qu.:37773  \n Max.   :8.312   Max.   :5.543    Max.   :1600500.0   Max.   :96782  \n                                                                     \n   export_usd          import_usd             GDP            gdp_per_capita  \n Min.   :7.416e+06   Min.   :3.959e+06   Min.   :1.369e+10   Min.   :   739  \n 1st Qu.:7.120e+07   1st Qu.:6.518e+07   1st Qu.:2.180e+11   1st Qu.:  5885  \n Median :1.459e+08   Median :1.346e+08   Median :3.908e+11   Median : 13447  \n Mean   :2.862e+08   Mean   :2.609e+08   Mean   :1.406e+12   Mean   : 23736  \n 3rd Qu.:3.285e+08   3rd Qu.:2.818e+08   3rd Qu.:1.103e+12   3rd Qu.: 39901  \n Max.   :3.292e+09   Max.   :3.383e+09   Max.   :2.544e+13   Max.   :106177  \n NA's   :53          NA's   :53                                              \n gdp_per_employed   inflation       unemployment         hdi        \n Min.   :  6155   Min.   :-3.686   Min.   : 0.130   Min.   :0.3470  \n 1st Qu.: 34236   1st Qu.: 1.544   1st Qu.: 3.745   1st Qu.:0.5930  \n Median : 61921   Median : 2.849   Median : 5.280   Median :0.7320  \n Mean   : 65738   Mean   : 4.053   Mean   : 6.375   Mean   :0.7093  \n 3rd Qu.: 92314   3rd Qu.: 5.062   3rd Qu.: 7.795   3rd Qu.:0.8310  \n Max.   :179303   Max.   :72.309   Max.   :28.840   Max.   :0.9080  \n NA's   :2        NA's   :24       NA's   :1        NA's   :431     \n   population       \n Min.   :1.463e+06  \n 1st Qu.:9.993e+06  \n Median :3.813e+07  \n Mean   :1.217e+08  \n 3rd Qu.:1.038e+08  \n Max.   :1.417e+09  \n NA's   :52         \n\n\n\n# Summarize data to find the range of years available for each country\nyear_summary &lt;- big_mac_combined %&gt;%\n  group_by(country) %&gt;%\n  summarize(StartYear = min(year), EndYear = max(year)) %&gt;%\n  ungroup()\n\n# Print the summary\nprint(year_summary)\n\n# A tibble: 53 × 3\n   country    StartYear EndYear\n   &lt;chr&gt;          &lt;dbl&gt;   &lt;dbl&gt;\n 1 Argentina       2000    2022\n 2 Australia       2000    2022\n 3 Azerbaijan      2021    2022\n 4 Bahrain         2021    2022\n 5 Brazil          2000    2022\n 6 Britain         2000    2022\n 7 Canada          2000    2022\n 8 Chile           2000    2022\n 9 China           2000    2022\n10 Colombia        2004    2022\n# ℹ 43 more rows\n\n\n\n# Your previous code to summarize StartYear and EndYear by country\nyear_summary &lt;- big_mac_combined %&gt;%\n  group_by(country) %&gt;%\n  summarize(StartYear = min(year), EndYear = max(year)) %&gt;%\n  ungroup()\n\n# Group by StartYear and list countries along with their EndYear\ngrouped_summary &lt;- year_summary %&gt;%\n  group_by(StartYear) %&gt;%\n  summarize(Countries = paste(country, \"(EndYear:\", EndYear, \")\", sep = \"\", collapse = \"; \"),\n            .groups = 'drop') %&gt;%\n  ungroup()\n\n# Print the grouped summary\nprint(grouped_summary)\n\n# A tibble: 7 × 2\n  StartYear Countries                                                           \n      &lt;dbl&gt; &lt;chr&gt;                                                               \n1      2000 Argentina(EndYear:2022); Australia(EndYear:2022); Brazil(EndYear:20…\n2      2001 Philippines(EndYear:2022)                                           \n3      2002 Norway(EndYear:2022); Peru(EndYear:2022); Turkey(EndYear:2022)      \n4      2003 Egypt(EndYear:2022)                                                 \n5      2004 Colombia(EndYear:2022); Pakistan(EndYear:2022); Saudi Arabia(EndYea…\n6      2011 India(EndYear:2022)                                                 \n7      2021 Azerbaijan(EndYear:2022); Bahrain(EndYear:2022); Costa Rica(EndYear…\n\n\n\nfiltered_big_mac_data &lt;- big_mac_combined %&gt;%\n  filter(!(year %in% c(2022, 2023)))\n\n# View the first few rows of the filtered dataframe to confirm\nhead(filtered_big_mac_data)\n\n# A tibble: 6 × 17\n# Groups:   year, country [6]\n  country    year currency_code bmi_localprice bmi_usd_price bmi_gdpadj_price\n  &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;                  &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;\n1 Argentina  2000 ARS                     2.5           2.5              1.92\n2 Australia  2000 AUD                     2.59          1.54             2.30\n3 Brazil     2000 BRL                     2.95          1.65             1.87\n4 Britain    2000 GBP                     1.9           3.00             2.16\n5 Canada     2000 CAD                     2.85          1.94             2.25\n6 Chile      2000 CLP                  1260             2.45             1.87\n# ℹ 11 more variables: dollar_ex &lt;dbl&gt;, GDP_bigmac &lt;dbl&gt;, export_usd &lt;dbl&gt;,\n#   import_usd &lt;dbl&gt;, GDP &lt;dbl&gt;, gdp_per_capita &lt;dbl&gt;, gdp_per_employed &lt;dbl&gt;,\n#   inflation &lt;dbl&gt;, unemployment &lt;dbl&gt;, hdi &lt;dbl&gt;, population &lt;dbl&gt;\n\n\nChecking the missing data and highlighting the countries within the gdp_per_employed and inflation columns\n\nmissing_values_summary &lt;- filtered_big_mac_data %&gt;%\n  filter(is.na(gdp_per_employed) | is.na(inflation)) %&gt;% # Adjust 'price' to the column you're interested in\n  group_by(country, year) %&gt;%\n  summarise(MissingCount = n(), .groups = 'drop') %&gt;%\n  arrange(country, year)\n\n# Display the summary\nprint(missing_values_summary)\n\n# A tibble: 22 × 3\n   country    year MissingCount\n   &lt;chr&gt;     &lt;dbl&gt;        &lt;int&gt;\n 1 Argentina  2000            1\n 2 Argentina  2001            1\n 3 Argentina  2002            1\n 4 Argentina  2003            1\n 5 Argentina  2004            1\n 6 Argentina  2005            1\n 7 Argentina  2006            1\n 8 Argentina  2007            1\n 9 Argentina  2008            1\n10 Argentina  2009            1\n# ℹ 12 more rows\n\n\nImpute the the inflation data for Argentina from [World Data Info Link](https://www.worlddata.info/america/argentina/inflation-rates.php)\n\nlibrary(readxl)\narg_inflation_data &lt;- read_excel(\"data/ARG_inflation_Data.xlsx\")\n\n\narg_inflation_data_relevant &lt;- arg_inflation_data %&gt;%\n  select(year, inflation)\n\n\nfiltered_big_mac_data_imputed &lt;- filtered_big_mac_data %&gt;%\n  \n  mutate(inflation_arg = ifelse(country == \"Argentina\", arg_inflation_data$inflation[match(year, arg_inflation_data$year)], NA)) %&gt;%\n  mutate(inflation = ifelse(is.na(inflation) & country == \"Argentina\", inflation_arg, inflation)) %&gt;%\n  select(-inflation_arg)\n\nprint(filtered_big_mac_data_imputed)\n\n# A tibble: 747 × 17\n# Groups:   year, country [747]\n   country      year currency_code bmi_localprice bmi_usd_price bmi_gdpadj_price\n   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;                  &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;\n 1 Argentina    2000 ARS                     2.5           2.5              1.92\n 2 Australia    2000 AUD                     2.59          1.54             2.30\n 3 Brazil       2000 BRL                     2.95          1.65             1.87\n 4 Britain      2000 GBP                     1.9           3.00             2.16\n 5 Canada       2000 CAD                     2.85          1.94             2.25\n 6 Chile        2000 CLP                  1260             2.45             1.87\n 7 China        2000 CNY                     9.9           1.20             1.81\n 8 Czech Repu…  2000 CZK                    54.4           1.39             1.94\n 9 Denmark      2000 DKK                    24.8           3.08             2.16\n10 Hong Kong    2000 HKD                    10.2           1.31             2.54\n# ℹ 737 more rows\n# ℹ 11 more variables: dollar_ex &lt;dbl&gt;, GDP_bigmac &lt;dbl&gt;, export_usd &lt;dbl&gt;,\n#   import_usd &lt;dbl&gt;, GDP &lt;dbl&gt;, gdp_per_capita &lt;dbl&gt;, gdp_per_employed &lt;dbl&gt;,\n#   inflation &lt;dbl&gt;, unemployment &lt;dbl&gt;, hdi &lt;dbl&gt;, population &lt;dbl&gt;\n\n\nWill now, remove the data from Venezuela as it has both missing datas from gdp and inflation\n\ncleaned_big_mac_data &lt;- filtered_big_mac_data_imputed %&gt;%\n  filter(country != \"Venezuela\")\n\n\n# Assuming 'cleaned_big_mac_data' is already loaded into your R session\n\n# Convert year to numeric to ensure proper filtering\ncleaned_big_mac_data$year &lt;- as.numeric(as.character(cleaned_big_mac_data$year))\n\n# Filter for years 2002 to 2021\ndata_2002_2021 &lt;- cleaned_big_mac_data %&gt;%\n  filter(year &gt;= 2002 & year &lt;= 2021)\n\n# Drop rows with any NA values in any column\ndata_2002_2021_complete &lt;- na.omit(data_2002_2021)\n\n# Identify countries with data for each year from 2002 to 2021\ncountries_with_complete_data &lt;- data_2002_2021_complete %&gt;%\n  group_by(country) %&gt;%\n  filter(n_distinct(year) == (2021 - 2002 + 1)) %&gt;%\n  ungroup()\n\ncountries_with_complete_data &lt;- countries_with_complete_data %&gt;%\n  mutate(country = ifelse(country == \"Britain\", \"United Kingdom\", country),\n         country = ifelse(country == \"Czech Republic\", \"Czech Rep.\", country),\n         country = ifelse(country == \"South Korea\", \"Korea\", country),\n         country = ifelse(country == \"Switzerland\", \"Switzerland\", country))\n\n# View the first few rows to confirm\nhead(countries_with_complete_data)\n\n# A tibble: 0 × 17\n# ℹ 17 variables: country &lt;lgl&gt;, year &lt;dbl&gt;, currency_code &lt;chr&gt;,\n#   bmi_localprice &lt;dbl&gt;, bmi_usd_price &lt;dbl&gt;, bmi_gdpadj_price &lt;dbl&gt;,\n#   dollar_ex &lt;dbl&gt;, GDP_bigmac &lt;dbl&gt;, export_usd &lt;dbl&gt;, import_usd &lt;dbl&gt;,\n#   GDP &lt;dbl&gt;, gdp_per_capita &lt;dbl&gt;, gdp_per_employed &lt;dbl&gt;, inflation &lt;dbl&gt;,\n#   unemployment &lt;dbl&gt;, hdi &lt;dbl&gt;, population &lt;dbl&gt;"
  },
  {
    "objectID": "prototype/data_preparation/data_preparation_and_cleaning.html#combine-with-country",
    "href": "prototype/data_preparation/data_preparation_and_cleaning.html#combine-with-country",
    "title": "Data Preparation & Cleaning",
    "section": "combine with country",
    "text": "combine with country\n\ncountry_all &lt;- data.frame(country = unique(countries_with_complete_data$country))\n\nmap continent\n\ncontinent_mapping &lt;- data.frame(\n  country = c(\"Argentina\", \"Australia\", \"Brazil\", \"United Kingdom\", \"Canada\", \"Chile\", \"China\", \"Czech Rep.\", \"Denmark\", \"Hong Kong\", \"Hungary\", \"Indonesia\", \"Japan\", \"Malaysia\", \"Mexico\", \"New Zealand\", \"Peru\", \"Philippines\", \"Poland\", \"Russia\", \"Singapore\", \"South Africa\", \"Korea\", \"Sweden\", \"Switzerland\", \"Thailand\", \"Turkey\", \"United States\"),\n  continent = c(\"South America\", \"Oceania\", \"South America\", \"Europe\", \"North America\", \"South America\", \"Asia\", \"Europe\", \"Europe\", \"Asia\", \"Europe\", \"Asia\", \"Asia\", \"Asia\", \"North America\", \"Oceania\", \"South America\", \"Asia\", \"Europe\", \"Europe\", \"Asia\", \"Africa\", \"Asia\", \"Europe\", \"Europe\", \"Asia\", \"Asia\", \"North America\")\n)\n\n# Merge the continent mapping with your original DataFrame 'df'\ncountry_all &lt;- merge(country_all, continent_mapping, by = \"country\", all.x = TRUE)\n\nmap g7, g20, eu\n\ng7_countries &lt;- c(\"Canada\", \"France\", \"Germany\", \"Italy\", \"United Kingdom\", \"United States\", \"Japan\")\n\ng20_countries &lt;- c(\"Argentina\", \"Australia\", \"Brazil\", \"Canada\", \"China\", \"France\", \"Germany\", \"India\", \"Indonesia\", \"Italy\", \"Japan\", \"Mexico\", \"Russia\", \"Saudi Arabia\", \"South Africa\", \"South Korea\", \"Turkey\", \"United Kingdom\", \"United States\", \"European Union\")\n\neu_countries &lt;- c(\"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \"Czech Rep.\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\", \"Latvia\", \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\", \"Poland\", \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\")\n\nbrics_countries &lt;- c(\"Brazil\", \"Russia\", \"India\", \"China\", \"South Africa\",\"Egypt\",\"Ethiopia\",\"Iran\",\"United Arab Emirates\")\n\nnic_countries &lt;- c(\"Brazil\", \"Mexico\", \"India\", \"China\", \"Philippines\",\"Indonesia\",\"Thailand\",\"Malaysia\",\"Turkey\")\n\n\ncountry_all &lt;- country_all %&gt;%\n  mutate(\n    g7 = country %in% g7_countries,\n    g20 = country %in% g20_countries,\n    eu = country %in% eu_countries,\n    brics = country %in% brics_countries,\n    nic = country %in% nic_countries \n  )\n\ntake a look at the countries\n\nhead(country_all)\n\n[1] country   continent g7        g20       eu        brics     nic      \n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\n# Save cleaned_big_mac_data dataframe to a CSV file\nwrite.csv(countries_with_complete_data, file = \"data/countries_with_complete_data.csv\")\nwrite.csv(country_all, file = \"data/country_all.csv\")"
  }
]